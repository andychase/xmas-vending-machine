// Gotta catch 'em all

int melody[] = { 
330, 294, 262, 0, 294, 330, 330, 294, 262, 330, 0, 0, 330, 392, 440, 0 
};
int noteDurations[] = { 
500, 250, 500, 500, 250, 500, 250, 500, 250, 500, 1000, 250, 250, 250, 250, 0 
};

// Kirby 


int melody[] = { 
1047, 784, 622, 587, 523, 523, 587, 622, 523, 466, 523, 392, 0 
};
int noteDurations[] = { 
1000, 1000, 500, 500, 1000, 500, 500, 500, 500, 500, 500, 1000, 0 
};

void setup() {
  
  for (int thisNote = 0; thisNote < sizeof(melody) / sizeof(int); thisNote++)
  {    
    tone(8, melody[thisNote], noteDurations[thisNote] * .5);    
    delay(noteDurations[thisNote] * .7);    
    noTone(8);
  }
}

// Mario


int melody[] = { 
659, 659, 659, 0, 523, 659, 784, 392
};
int noteDurations[] = { 
126, 252, 126, 126, 126, 252, 504, 504
};

void setup() {
  
  for (int thisNote = 0; thisNote < sizeof(melody) / sizeof(int); thisNote++)
  {    
    tone(8, melody[thisNote], noteDurations[thisNote] * .7);    
    delay(noteDurations[thisNote] * 1);    
    noTone(8);
  }
}

// Zelda main theme


int melody[] = { 
440, 330, 440, 440, 494, 554, 587, 659, 0, 659, 659, 698, 784, 880, 0, 1047, 988, 831
};
int noteDurations[] = { 
504, 756, 252, 126, 126, 126, 126, 1008, 252, 252, 168, 168, 168, 1008, 504, 504, 504, 1008 
};

void setup() {
  
  for (int thisNote = 0; thisNote < sizeof(melody) / sizeof(int); thisNote++)
  {    
    tone(8, melody[thisNote], noteDurations[thisNote] * .6);    
    delay(noteDurations[thisNote] * 0.8);    
    noTone(8);
  }
}

// Owl City Firefly


int melody[] = { 
0, 233, 349, 349, 311, 349, 311, 233, 0, 0, 233, 262, 262, 233, 262, 311, 349,
0, 392, 349, 311, 233, 233, 233, 349, 311, 262
};
int noteDurations[] = { 
250, 125, 250, 250, 125, 250, 250, 250, 250, 250, 125, 250, 250, 125, 250, 250,
 500, 250, 250, 250, 125, 250, 125, 250, 125, 250, 125
};

void setup() {
  
  for (int thisNote = 0; thisNote < sizeof(melody) / sizeof(int); thisNote++)
  {    
    tone(8, melody[thisNote], noteDurations[thisNote] * .7);    
    delay(noteDurations[thisNote]);    
    noTone(8);
  }
}

// Twenty one pilots stressed out


int melody[] = { 
659, 659, 659, 659, 523, 523, 659, 659, 659, 494, 494, 440, 0, 0 
};
int noteDurations[] = { 
167, 334, 167, 501, 501, 1002, 334, 167, 501, 501, 1002, 334, 167, 0 
};

void setup() {
  
  for (int thisNote = 0; thisNote < sizeof(melody) / sizeof(int); thisNote++)
  {    
    tone(8, melody[thisNote], noteDurations[thisNote] * .6);
    delay(noteDurations[thisNote] * 0.9);    
    noTone(8);
  }
}

// Spongebob theme


int melody[] = { 
147, 147, 165, 147, 123, 98, 123, 147, 165, 147, 123, 196, 196, 196, 196, 0, 0 
};
int noteDurations[] = { 
250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 750, 500, 500, 500, 500, 0, 0 
};

void setup() {
  
  for (int thisNote = 0; thisNote < sizeof(melody) / sizeof(int); thisNote++)
  {    
    tone(8, melody[thisNote], noteDurations[thisNote] * .7);    
    delay(noteDurations[thisNote]);    
    noTone(8);
  }
}

// Sea Shanty 2


int melody[] = { 
880, 0, 659, 587, 554, 0, 554, 587, 659, 740, 831, 659, 0, 740, 0, 659, 587, 554, 0, 554, 0, 494, 0, 554, 0, 440, 0, 0 
};
int noteDurations[] = { 
125, 125, 125, 125, 250, 125, 125, 125, 125, 125, 125, 250, 250, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 250, 250, 0 
};

void setup() {
  
  for (int thisNote = 0; thisNote < sizeof(melody) / sizeof(int); thisNote++)
  {    
    tone(11, melody[thisNote], noteDurations[thisNote] * .9);    
    delay(noteDurations[thisNote] * 1.3);    
    noTone(11);
  }
}

// Dream Speedrun


int melody[] = { 
0, 104, 116, 87, 116, 104, 116, 87, 116, 104, 104, 116, 87, 116, 104, 116, 87, 116, 104, 116, 831, 1109, 1245, 933
};
int noteDurations[] = { 
250, 500, 500, 500, 250, 500, 500, 500, 250, 250, 250, 500, 500, 250, 500, 500, 500, 250, 500, 250, 250, 250, 250, 1000
};

void setup() {
  
  for (int thisNote = 0; thisNote < sizeof(melody) / sizeof(int); thisNote++)
  {    
    tone(8, melody[thisNote], noteDurations[thisNote] * 0.5 );    
    delay(noteDurations[thisNote] * 0.7);    
    noTone(8);
  }
}

// Sad Violin

int melody[] = { 
659, 659, 659, 659, 784, 659, 587, 523, 494, 392, 0 
};
int noteDurations[] = { 
500, 500, 500, 500, 1000, 500, 500, 500, 500, 1000, 0 
};

void setup() {
  
  for (int thisNote = 0; thisNote < sizeof(melody) / sizeof(int); thisNote++)
  {    
    tone(8, melody[thisNote], noteDurations[thisNote] * 0.6);    
    delay(noteDurations[thisNote] * 1.2);    
    noTone(8);
  }
}

// What? Meme song from earthbound


int melody[] = { 
98, 0, 73, 0, 73, 87, 87, 73, 65, 73, 98, 0, 73, 0, 73, 87, 87, 73, 87, 73, 392, 294, 311, 466, 415, 0, 554, 0, 554
};
int noteDurations[] = { 
248, 248, 248, 124, 124, 124, 124, 248, 248, 248, 248, 248, 248, 124, 124, 124, 124, 248, 248, 248, 124, 124, 124, 124, 496, 992, 90, 64, 120
};

void setup() {
  
  for (int thisNote = 0; thisNote < sizeof(melody) / sizeof(int); thisNote++)
  {    
    tone(8, melody[thisNote], noteDurations[thisNote] * .8);    
    delay(noteDurations[thisNote] * 1);    
    noTone(8);
  }
}

// Christmas Shoes


int melody[] = { 
784, 880, 988, 1175, 880, 659, 740, 784, 988, 587, 0 
};
int noteDurations[] = { 
125, 125, 250, 500, 1000, 125, 125, 250, 500, 1000, 0 
};

void setup() {
  
  for (int thisNote = 0; thisNote < sizeof(melody) / sizeof(int); thisNote++)
  {    
    tone(8, melody[thisNote], noteDurations[thisNote] * .8);    
    delay(noteDurations[thisNote] * 1.3);    
    noTone(8);
  }
}

// Coffin song


int melody[] = { 
370, 0, 370, 554, 494, 0, 440, 0, 415, 0, 415, 415, 494, 440, 415, 370, 0, 370, 880, 831, 880, 831, 880, 370, 0, 370, 880, 831, 880, 831, 880, 370, 0, 0, 0, 0, 0, 0, 0, 0 
};
int noteDurations[] = { 
250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 500, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 0 
};

void setup() {
  
  for (int thisNote = 0; thisNote < sizeof(melody) / sizeof(int); thisNote++)
  {    
    tone(8, melody[thisNote], noteDurations[thisNote] * .5);    
    delay(noteDurations[thisNote] * 0.8);    
    noTone(8);
  }
}

